// Code generated by protoc-gen-go.
// source: s2s_message.proto
// DO NOT EDIT!

/*
Package S2SMessage is a generated protocol buffer package.

It is generated from these files:
	s2s_message.proto

It has these top-level messages:
	SS_MsgRoute_Req
	SS_MsgRoute_Rsp
	SS_BaseMessage_Req
	SS_BaseMessage_Rsp
	ArrayCache_Repeat
	SS_BigWordMessage_Ntf
	CacheOperation
*/
package S2SMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageID int32

const (
	MessageID_SS_Invalid     MessageID = 0
	MessageID_CS_MsgRoute    MessageID = 1
	MessageID_SC_MsgRoute    MessageID = 2
	MessageID_CS_BaseMessage MessageID = 3
	MessageID_SC_BaseMessage MessageID = 4
)

var MessageID_name = map[int32]string{
	0: "SS_Invalid",
	1: "CS_MsgRoute",
	2: "SC_MsgRoute",
	3: "CS_BaseMessage",
	4: "SC_BaseMessage",
}
var MessageID_value = map[string]int32{
	"SS_Invalid":     0,
	"CS_MsgRoute":    1,
	"SC_MsgRoute":    2,
	"CS_BaseMessage": 3,
	"SC_BaseMessage": 4,
}

func (x MessageID) String() string {
	return proto.EnumName(MessageID_name, int32(x))
}
func (MessageID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EMessageErr int32

const (
	EMessageErr_Invalid EMessageErr = 0
	EMessageErr_Success EMessageErr = 1
	EMessageErr_Fail    EMessageErr = 2
)

var EMessageErr_name = map[int32]string{
	0: "Invalid",
	1: "Success",
	2: "Fail",
}
var EMessageErr_value = map[string]int32{
	"Invalid": 0,
	"Success": 1,
	"Fail":    2,
}

func (x EMessageErr) String() string {
	return proto.EnumName(EMessageErr_name, int32(x))
}
func (EMessageErr) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ECacheOper int32

const (
	ECacheOper_Invalidoper ECacheOper = 0
	ECacheOper_Add         ECacheOper = 1
	ECacheOper_Delete      ECacheOper = 2
	ECacheOper_Update      ECacheOper = 3
	ECacheOper_Select      ECacheOper = 4
)

var ECacheOper_name = map[int32]string{
	0: "Invalidoper",
	1: "Add",
	2: "Delete",
	3: "Update",
	4: "Select",
}
var ECacheOper_value = map[string]int32{
	"Invalidoper": 0,
	"Add":         1,
	"Delete":      2,
	"Update":      3,
	"Select":      4,
}

func (x ECacheOper) String() string {
	return proto.EnumName(ECacheOper_name, int32(x))
}
func (ECacheOper) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// route c2s消息路由
type SS_MsgRoute_Req struct {
	Operid int32  `protobuf:"varint,1,opt,name=Operid" json:"Operid,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *SS_MsgRoute_Req) Reset()                    { *m = SS_MsgRoute_Req{} }
func (m *SS_MsgRoute_Req) String() string            { return proto.CompactTextString(m) }
func (*SS_MsgRoute_Req) ProtoMessage()               {}
func (*SS_MsgRoute_Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SS_MsgRoute_Rsp struct {
	Ret EMessageErr `protobuf:"varint,1,opt,name=Ret,enum=S2SMessage.EMessageErr" json:"Ret,omitempty"`
}

func (m *SS_MsgRoute_Rsp) Reset()                    { *m = SS_MsgRoute_Rsp{} }
func (m *SS_MsgRoute_Rsp) String() string            { return proto.CompactTextString(m) }
func (*SS_MsgRoute_Rsp) ProtoMessage()               {}
func (*SS_MsgRoute_Rsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 基础消息
type SS_BaseMessage_Req struct {
	Srcid int32  `protobuf:"varint,1,opt,name=Srcid" json:"Srcid,omitempty"`
	Dstid int32  `protobuf:"varint,2,opt,name=Dstid" json:"Dstid,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *SS_BaseMessage_Req) Reset()                    { *m = SS_BaseMessage_Req{} }
func (m *SS_BaseMessage_Req) String() string            { return proto.CompactTextString(m) }
func (*SS_BaseMessage_Req) ProtoMessage()               {}
func (*SS_BaseMessage_Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SS_BaseMessage_Rsp struct {
	Ret EMessageErr `protobuf:"varint,1,opt,name=Ret,enum=S2SMessage.EMessageErr" json:"Ret,omitempty"`
}

func (m *SS_BaseMessage_Rsp) Reset()                    { *m = SS_BaseMessage_Rsp{} }
func (m *SS_BaseMessage_Rsp) String() string            { return proto.CompactTextString(m) }
func (*SS_BaseMessage_Rsp) ProtoMessage()               {}
func (*SS_BaseMessage_Rsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ArrayCache_Repeat struct {
	NameId int32  `protobuf:"varint,1,opt,name=NameId" json:"NameId,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
}

func (m *ArrayCache_Repeat) Reset()                    { *m = ArrayCache_Repeat{} }
func (m *ArrayCache_Repeat) String() string            { return proto.CompactTextString(m) }
func (*ArrayCache_Repeat) ProtoMessage()               {}
func (*ArrayCache_Repeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type SS_BigWordMessage_Ntf struct {
	Caches []*ArrayCache_Repeat `protobuf:"bytes,1,rep,name=Caches" json:"Caches,omitempty"`
}

func (m *SS_BigWordMessage_Ntf) Reset()                    { *m = SS_BigWordMessage_Ntf{} }
func (m *SS_BigWordMessage_Ntf) String() string            { return proto.CompactTextString(m) }
func (*SS_BigWordMessage_Ntf) ProtoMessage()               {}
func (*SS_BigWordMessage_Ntf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SS_BigWordMessage_Ntf) GetCaches() []*ArrayCache_Repeat {
	if m != nil {
		return m.Caches
	}
	return nil
}

type CacheOperation struct {
	Caches []*ArrayCache_Repeat `protobuf:"bytes,1,rep,name=Caches" json:"Caches,omitempty"`
	Oper   ECacheOper           `protobuf:"varint,2,opt,name=Oper,enum=S2SMessage.ECacheOper" json:"Oper,omitempty"`
}

func (m *CacheOperation) Reset()                    { *m = CacheOperation{} }
func (m *CacheOperation) String() string            { return proto.CompactTextString(m) }
func (*CacheOperation) ProtoMessage()               {}
func (*CacheOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CacheOperation) GetCaches() []*ArrayCache_Repeat {
	if m != nil {
		return m.Caches
	}
	return nil
}

func init() {
	proto.RegisterType((*SS_MsgRoute_Req)(nil), "S2SMessage.SS_MsgRoute_Req")
	proto.RegisterType((*SS_MsgRoute_Rsp)(nil), "S2SMessage.SS_MsgRoute_Rsp")
	proto.RegisterType((*SS_BaseMessage_Req)(nil), "S2SMessage.SS_BaseMessage_Req")
	proto.RegisterType((*SS_BaseMessage_Rsp)(nil), "S2SMessage.SS_BaseMessage_Rsp")
	proto.RegisterType((*ArrayCache_Repeat)(nil), "S2SMessage.ArrayCache_Repeat")
	proto.RegisterType((*SS_BigWordMessage_Ntf)(nil), "S2SMessage.SS_BigWordMessage_Ntf")
	proto.RegisterType((*CacheOperation)(nil), "S2SMessage.CacheOperation")
	proto.RegisterEnum("S2SMessage.MessageID", MessageID_name, MessageID_value)
	proto.RegisterEnum("S2SMessage.EMessageErr", EMessageErr_name, EMessageErr_value)
	proto.RegisterEnum("S2SMessage.ECacheOper", ECacheOper_name, ECacheOper_value)
}

func init() { proto.RegisterFile("s2s_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x93, 0xd1, 0x8b, 0xd3, 0x40,
	0x10, 0xc6, 0x2f, 0x4d, 0x9a, 0x7a, 0x13, 0xc9, 0xed, 0x0d, 0x7a, 0xf6, 0x45, 0x28, 0x7d, 0xaa,
	0x7d, 0x28, 0x18, 0xf1, 0x4d, 0x39, 0xce, 0xf4, 0x84, 0x0a, 0x57, 0x61, 0x57, 0xf1, 0x31, 0xac,
	0xc9, 0x58, 0x03, 0xb9, 0x4b, 0xdc, 0xdd, 0x13, 0xfc, 0xef, 0x65, 0x37, 0x31, 0x69, 0xbc, 0x27,
	0x7d, 0x9b, 0xf9, 0x76, 0x66, 0xbe, 0x1f, 0x33, 0x2c, 0x9c, 0xeb, 0x44, 0x67, 0xb7, 0xa4, 0xb5,
	0x3c, 0xd0, 0xa6, 0x51, 0xb5, 0xa9, 0x11, 0x44, 0x22, 0x6e, 0x5a, 0x65, 0xf9, 0x16, 0xce, 0x84,
	0xc8, 0x6e, 0xf4, 0x81, 0xd7, 0xf7, 0x86, 0x32, 0x4e, 0x3f, 0xf0, 0x02, 0xc2, 0x8f, 0x0d, 0xa9,
	0xb2, 0x98, 0x7b, 0x0b, 0x6f, 0x35, 0xe5, 0x5d, 0x86, 0x08, 0xc1, 0x56, 0x1a, 0x39, 0x9f, 0x2c,
	0xbc, 0xd5, 0x63, 0xee, 0xe2, 0xe5, 0x9b, 0xbf, 0xda, 0x75, 0x83, 0x2f, 0xc0, 0xe7, 0x64, 0x5c,
	0x6f, 0x9c, 0x3c, 0xdb, 0x0c, 0x5e, 0x9b, 0xeb, 0x2e, 0xb8, 0x56, 0x8a, 0xdb, 0x9a, 0xe5, 0x27,
	0x40, 0x21, 0xb2, 0x77, 0x52, 0x53, 0xf7, 0xe2, 0xfc, 0x9f, 0xc0, 0x54, 0xa8, 0xbc, 0xb7, 0x6f,
	0x13, 0xab, 0x6e, 0xb5, 0x29, 0x0b, 0x67, 0x3f, 0xe5, 0x6d, 0xd2, 0x33, 0xf9, 0x47, 0x4c, 0x97,
	0x0f, 0xa7, 0xfe, 0x1b, 0xd6, 0x25, 0x9c, 0x5f, 0x29, 0x25, 0x7f, 0xa5, 0x32, 0xff, 0x6e, 0x91,
	0x1a, 0x92, 0xc6, 0x6e, 0x65, 0x2f, 0x6f, 0x69, 0xd7, 0x6f, 0xa5, 0xcd, 0x46, 0x5b, 0x39, 0xed,
	0x08, 0xf6, 0xf0, 0xd4, 0x12, 0x94, 0x87, 0x2f, 0xb5, 0x2a, 0xfe, 0x40, 0xec, 0xcd, 0x37, 0x7c,
	0x0d, 0xa1, 0x1b, 0xaa, 0xe7, 0xde, 0xc2, 0x5f, 0x45, 0xc9, 0xf3, 0x63, 0x8e, 0x07, 0x9e, 0xbc,
	0x2b, 0x5e, 0x6a, 0x88, 0x5d, 0x64, 0x0f, 0x21, 0x4d, 0x59, 0xdf, 0xfd, 0xe7, 0x20, 0x5c, 0x43,
	0x60, 0x67, 0x38, 0xd8, 0x38, 0xb9, 0x18, 0x6d, 0xa1, 0x77, 0xe0, 0xae, 0x66, 0x4d, 0x70, 0xda,
	0xbd, 0xed, 0xb6, 0x18, 0x03, 0x08, 0x91, 0xed, 0xee, 0x7e, 0xca, 0xaa, 0x2c, 0xd8, 0x09, 0x9e,
	0x41, 0x94, 0x0e, 0x77, 0x67, 0x9e, 0x15, 0x44, 0x3a, 0x08, 0x13, 0x44, 0x88, 0xd3, 0xd1, 0x15,
	0x98, 0x6f, 0x35, 0x91, 0x8e, 0xb4, 0x60, 0xfd, 0x12, 0xa2, 0xa3, 0x03, 0x60, 0x04, 0xb3, 0xc1,
	0x25, 0x82, 0x99, 0xb8, 0xcf, 0x73, 0xd2, 0x9a, 0x79, 0xf8, 0x08, 0x82, 0xf7, 0xb2, 0xac, 0xd8,
	0x64, 0xfd, 0x01, 0x60, 0xa0, 0xb5, 0xce, 0x5d, 0x47, 0xdd, 0x90, 0x62, 0x27, 0x38, 0x03, 0xff,
	0xaa, 0x28, 0x98, 0x87, 0x00, 0xe1, 0x96, 0x2a, 0x72, 0x38, 0x00, 0xe1, 0xe7, 0xa6, 0x90, 0xc6,
	0x62, 0x00, 0x84, 0x82, 0x2a, 0xca, 0x0d, 0x0b, 0xbe, 0x86, 0xee, 0x4b, 0xbc, 0xfa, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0x9f, 0x57, 0x93, 0xc5, 0x27, 0x03, 0x00, 0x00,
}
