// Code generated by protoc-gen-go.
// source: c2s_message.proto
// DO NOT EDIT!

/*
Package C2SMessage is a generated protocol buffer package.

It is generated from these files:
	c2s_message.proto

It has these top-level messages:
	Requestlogin
	RequestWechatlogin
*/
package C2SMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// add by stefanchen
// id : msg + rsp/req + function
type MessageID int32

const (
	MessageID_msg_invalid          MessageID = 0
	MessageID_msg_external_gateway MessageID = 1
	MessageID_msg_req_login        MessageID = 2
	MessageID_msg_rsp_login        MessageID = 3
	MessageID_msg_req_wechat_login MessageID = 4
	MessageID_msg_rsp_wechat_login MessageID = 5
)

var MessageID_name = map[int32]string{
	0: "msg_invalid",
	1: "msg_external_gateway",
	2: "msg_req_login",
	3: "msg_rsp_login",
	4: "msg_req_wechat_login",
	5: "msg_rsp_wechat_login",
}
var MessageID_value = map[string]int32{
	"msg_invalid":          0,
	"msg_external_gateway": 1,
	"msg_req_login":        2,
	"msg_rsp_login":        3,
	"msg_req_wechat_login": 4,
	"msg_rsp_wechat_login": 5,
}

func (x MessageID) String() string {
	return proto.EnumName(MessageID_name, int32(x))
}
func (MessageID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Requestlogin struct {
	DBID int32 `protobuf:"varint,1,opt,name=DBID" json:"DBID,omitempty"`
}

func (m *Requestlogin) Reset()                    { *m = Requestlogin{} }
func (m *Requestlogin) String() string            { return proto.CompactTextString(m) }
func (*Requestlogin) ProtoMessage()               {}
func (*Requestlogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RequestWechatlogin struct {
	Openid      int32 `protobuf:"varint,1,opt,name=Openid" json:"Openid,omitempty"`
	Assesstoken int32 `protobuf:"varint,2,opt,name=Assesstoken" json:"Assesstoken,omitempty"`
}

func (m *RequestWechatlogin) Reset()                    { *m = RequestWechatlogin{} }
func (m *RequestWechatlogin) String() string            { return proto.CompactTextString(m) }
func (*RequestWechatlogin) ProtoMessage()               {}
func (*RequestWechatlogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Requestlogin)(nil), "C2SMessage.Requestlogin")
	proto.RegisterType((*RequestWechatlogin)(nil), "C2SMessage.RequestWechatlogin")
	proto.RegisterEnum("C2SMessage.MessageID", MessageID_name, MessageID_value)
}

func init() { proto.RegisterFile("c2s_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x40, 0x71, 0x69, 0x2b, 0x71, 0x05, 0x91, 0x9e, 0x10, 0xca, 0x58, 0x65, 0x42, 0x0c, 0x0c,
	0xe5, 0x0b, 0x80, 0x2c, 0x1d, 0x00, 0xa9, 0x0c, 0x8c, 0x96, 0x69, 0x4e, 0xc6, 0x22, 0xb1, 0x9d,
	0x9c, 0x21, 0xf0, 0x17, 0x7c, 0x32, 0x8a, 0x31, 0x11, 0xdd, 0xec, 0xf7, 0x9e, 0xe5, 0xd3, 0xc1,
	0x72, 0xb7, 0x66, 0xd9, 0x10, 0xb3, 0xd2, 0x74, 0xe5, 0x3b, 0x17, 0x1c, 0xc2, 0xdd, 0xfa, 0xe9,
	0xfe, 0x97, 0x14, 0x05, 0x1c, 0x6f, 0xa9, 0x7d, 0x27, 0x0e, 0xb5, 0xd3, 0xc6, 0x22, 0xc2, 0xb4,
	0xbc, 0xdd, 0x94, 0xb9, 0x58, 0x89, 0x8b, 0xd9, 0x36, 0x9e, 0x8b, 0x07, 0xc0, 0xd4, 0x3c, 0xd3,
	0xee, 0x55, 0xa5, 0xf2, 0x1c, 0xe6, 0x8f, 0x9e, 0xac, 0xa9, 0x52, 0x9b, 0x6e, 0xb8, 0x82, 0xc5,
	0x0d, 0x33, 0x31, 0x07, 0xf7, 0x46, 0x36, 0x9f, 0x44, 0xf9, 0x1f, 0x5d, 0x7e, 0x0b, 0x38, 0x4a,
	0xff, 0x6f, 0x4a, 0x3c, 0x85, 0x45, 0xc3, 0x5a, 0x1a, 0xfb, 0xa1, 0x6a, 0x53, 0x65, 0x07, 0x98,
	0xc3, 0xd9, 0x00, 0xe8, 0x33, 0x50, 0x67, 0x55, 0x2d, 0xb5, 0x0a, 0xd4, 0xab, 0xaf, 0x4c, 0xe0,
	0x12, 0x4e, 0x06, 0xd3, 0x51, 0x2b, 0xe3, 0x0c, 0xd9, 0x64, 0x44, 0xec, 0x13, 0x3a, 0xfc, 0x7b,
	0x3f, 0x54, 0x7d, 0x9c, 0x37, 0x99, 0xe9, 0x68, 0xd8, 0xef, 0x9b, 0xd9, 0xcb, 0x3c, 0x6e, 0xe6,
	0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x30, 0x00, 0xf4, 0x2e, 0x01, 0x00, 0x00,
}
