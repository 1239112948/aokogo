// Code generated by protoc-gen-go.
// source: s2s_message.proto
// DO NOT EDIT!

/*
Package S2SMessage is a generated protocol buffer package.

It is generated from these files:
	s2s_message.proto

It has these top-level messages:
	C2SMsgRoute
	S2SBaseMessage
*/
package S2SMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServerMessageId int32

const (
	ServerMessageId_msg_invalid ServerMessageId = 0
)

var ServerMessageId_name = map[int32]string{
	0: "msg_invalid",
}
var ServerMessageId_value = map[string]int32{
	"msg_invalid": 0,
}

func (x ServerMessageId) String() string {
	return proto.EnumName(ServerMessageId_name, int32(x))
}
func (ServerMessageId) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ServerId int32

const (
	ServerId_SID_Invalid    ServerId = 0
	ServerId_SID_ESG        ServerId = 1
	ServerId_SID_ISG        ServerId = 2
	ServerId_SID_DB         ServerId = 3
	ServerId_SID_BigWorld   ServerId = 4
	ServerId_SID_Login      ServerId = 5
	ServerId_SID_SmallWorld ServerId = 6
	ServerId_SID_DBProxy    ServerId = 7
	ServerId_SID_Game       ServerId = 8
)

var ServerId_name = map[int32]string{
	0: "SID_Invalid",
	1: "SID_ESG",
	2: "SID_ISG",
	3: "SID_DB",
	4: "SID_BigWorld",
	5: "SID_Login",
	6: "SID_SmallWorld",
	7: "SID_DBProxy",
	8: "SID_Game",
}
var ServerId_value = map[string]int32{
	"SID_Invalid":    0,
	"SID_ESG":        1,
	"SID_ISG":        2,
	"SID_DB":         3,
	"SID_BigWorld":   4,
	"SID_Login":      5,
	"SID_SmallWorld": 6,
	"SID_DBProxy":    7,
	"SID_Game":       8,
}

func (x ServerId) String() string {
	return proto.EnumName(ServerId_name, int32(x))
}
func (ServerId) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// route c2s消息路由
type C2SMsgRoute struct {
	Operid int32  `protobuf:"varint,1,opt,name=Operid" json:"Operid,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *C2SMsgRoute) Reset()                    { *m = C2SMsgRoute{} }
func (m *C2SMsgRoute) String() string            { return proto.CompactTextString(m) }
func (*C2SMsgRoute) ProtoMessage()               {}
func (*C2SMsgRoute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// s2s 服务器间 基础消息
type S2SBaseMessage struct {
	Srcid int32  `protobuf:"varint,1,opt,name=Srcid" json:"Srcid,omitempty"`
	Dstid int32  `protobuf:"varint,2,opt,name=Dstid" json:"Dstid,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *S2SBaseMessage) Reset()                    { *m = S2SBaseMessage{} }
func (m *S2SBaseMessage) String() string            { return proto.CompactTextString(m) }
func (*S2SBaseMessage) ProtoMessage()               {}
func (*S2SBaseMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*C2SMsgRoute)(nil), "S2SMessage.C2SMsgRoute")
	proto.RegisterType((*S2SBaseMessage)(nil), "S2SMessage.S2SBaseMessage")
	proto.RegisterEnum("S2SMessage.ServerMessageId", ServerMessageId_name, ServerMessageId_value)
	proto.RegisterEnum("S2SMessage.ServerId", ServerId_name, ServerId_value)
}

func init() { proto.RegisterFile("s2s_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0x4d, 0xdb, 0xa4, 0xed, 0x24, 0xd6, 0xed, 0x20, 0xd2, 0x63, 0x29, 0x1e, 0x4a, 0x0f,
	0x1e, 0xe2, 0xc9, 0x6b, 0x8c, 0x84, 0x80, 0xc5, 0x92, 0x39, 0x78, 0x0c, 0xab, 0x59, 0xc2, 0x42,
	0xd2, 0x2d, 0xbb, 0xb1, 0xe8, 0x8b, 0xf8, 0xbc, 0xb2, 0xf9, 0x53, 0x6f, 0xf3, 0x7d, 0x33, 0xf3,
	0xdb, 0x65, 0x60, 0x69, 0x42, 0x93, 0xd7, 0xc2, 0x18, 0x5e, 0x8a, 0x87, 0x93, 0x56, 0x8d, 0x42,
	0xa0, 0x90, 0xf6, 0x9d, 0xd9, 0x3c, 0x81, 0xff, 0x1c, 0xd2, 0xde, 0x94, 0x99, 0xfa, 0x6a, 0x04,
	0xde, 0x81, 0xf7, 0x76, 0x12, 0x5a, 0x16, 0x2b, 0x67, 0xed, 0x6c, 0xdd, 0xac, 0x27, 0x44, 0x98,
	0xc4, 0xbc, 0xe1, 0xab, 0xd1, 0xda, 0xd9, 0x06, 0x59, 0x5b, 0x6f, 0x0e, 0xb0, 0xa0, 0x90, 0x22,
	0x6e, 0x44, 0x1f, 0x86, 0xb7, 0xe0, 0x92, 0xfe, 0xbc, 0x2c, 0x77, 0x60, 0x6d, 0x6c, 0x1a, 0x59,
	0xb4, 0xcb, 0x6e, 0xd6, 0xc1, 0x25, 0x71, 0xfc, 0x9f, 0xb8, 0xbb, 0x87, 0x25, 0x09, 0x7d, 0x16,
	0x7a, 0xf8, 0x70, 0x2e, 0x0b, 0xbc, 0x01, 0xbf, 0x36, 0x65, 0x2e, 0x8f, 0x67, 0x5e, 0xc9, 0x82,
	0x5d, 0xed, 0x7e, 0x1d, 0x98, 0xf7, 0x63, 0x5d, 0x9b, 0xd2, 0x38, 0x4f, 0x87, 0x36, 0xfa, 0x30,
	0xb5, 0xe2, 0x85, 0x12, 0xe6, 0x0c, 0x90, 0x52, 0xc2, 0x46, 0x08, 0xe0, 0x59, 0x88, 0x23, 0x36,
	0x46, 0x06, 0x81, 0xad, 0x23, 0x59, 0xbe, 0x2b, 0x5d, 0x15, 0x6c, 0x82, 0xd7, 0x30, 0xb7, 0xe6,
	0x55, 0x95, 0xf2, 0xc8, 0x5c, 0x44, 0x58, 0x58, 0xa4, 0x9a, 0x57, 0x55, 0x37, 0xe2, 0x0d, 0x6f,
	0xc5, 0xd1, 0x41, 0xab, 0xef, 0x1f, 0x36, 0xc5, 0x00, 0x66, 0x56, 0x24, 0xbc, 0x16, 0x6c, 0xf6,
	0xe1, 0xb5, 0xe7, 0x7d, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xc6, 0xa1, 0x2b, 0x73, 0x01,
	0x00, 0x00,
}
